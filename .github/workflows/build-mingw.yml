name: build-mingw

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        arch: [i686, x86_64]
        crt: [msvcrt, ucrt]

    outputs:
      GCC_VERSION: ${{ steps.build.outputs.GCC_VERSION }}
      MINGW_VERSION: ${{ steps.build.outputs.MINGW_VERSION }}
      GDB_VERSION: ${{ steps.build.outputs.GDB_VERSION }}
      MAKE_VERSION: ${{ steps.build.outputs.MAKE_VERSION }}

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: install dependencies
        run: |
          sudo apt-get install --no-install-recommends -y \
            ca-certificates \
            libgmp-dev \
            libmpc-dev \
            libmpfr-dev \
            libisl-dev \
            xz-utils \
            texinfo \
            patch \
            p7zip \
            cmake \
            make \
            curl \
            m4 \
            gcc \
            g++

      - name: build
        id: build
        run: ./build.sh ${{ matrix.arch }} ${{ matrix.crt }}

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gcc-v${{ steps.build.outputs.GCC_VERSION }}-mingw-v${{ steps.build.outputs.MINGW_VERSION }}-${{ matrix.crt }}-${{ matrix.arch }}
          path: gcc-v${{ steps.build.outputs.GCC_VERSION }}-mingw-v${{ steps.build.outputs.MINGW_VERSION }}-${{ matrix.crt }}-${{ matrix.arch }}.7z
          if-no-files-found: error
          compression-level: 0

  release:
    runs-on: ubuntu-24.04
    needs: build
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ github.token }}
      TAG: gcc-v${{ needs.build.outputs.GCC_VERSION }}-mingw-v${{ needs.build.outputs.MINGW_VERSION }}

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: delete existing release and tag
        run: |
          gh release delete "$TAG" --cleanup-tag -y || true

      - name: create release
        run: |
          cat <<EOF > notes.txt
          GCC v${{ needs.build.outputs.GCC_VERSION }}
          MinGW-w64 v${{ needs.build.outputs.MINGW_VERSION }}
          GDB v${{ needs.build.outputs.GDB_VERSION }}
          Make v${{ needs.build.outputs.MAKE_VERSION }}
          EOF

          gh release create "$TAG" \
            -R "${GITHUB_REPOSITORY}" \
            -t "$TAG" \
            -F notes.txt \
            --draft=false \
            --prerelease=false

      - name: get artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: gcc-v${{ needs.build.outputs.GCC_VERSION }}-mingw-v${{ needs.build.outputs.MINGW_VERSION }}-*
          merge-multiple: true

      - name: upload artifacts
        run: |
          gh release upload "$TAG" \
            gcc-v${{ needs.build.outputs.GCC_VERSION }}-mingw-v${{ needs.build.outputs.MINGW_VERSION }}-*.7z \
            -R "${GITHUB_REPOSITORY}"
